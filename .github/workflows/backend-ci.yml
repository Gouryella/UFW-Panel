name: Backend CI and Release

on:
  push:
    branches: [ "main" ]
    tags: [ 'v*' ] # Trigger on tags like v1.0, v1.2.3
    paths:
      - 'backend/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'backend/**'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.get_tag.outputs.tag }}
      project_name: ${{ steps.project_vars.outputs.name }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24.2'

    - name: Set project name
      id: project_vars
      run: echo "name=ufw-control-backend" >> $GITHUB_OUTPUT
      shell: bash

    - name: Build for linux/amd64
      run: GOOS=linux GOARCH=amd64 go build -o ${{ steps.project_vars.outputs.name }}-linux-amd64 -v .
      working-directory: ./backend

    - name: Build for linux/arm64
      run: GOOS=linux GOARCH=arm64 go build -o ${{ steps.project_vars.outputs.name }}-linux-arm64 -v .
      working-directory: ./backend

    - name: Test
      run: go test -v ./...
      working-directory: ./backend

    - name: Upload amd64 binary
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.project_vars.outputs.name }}-linux-amd64
        path: backend/${{ steps.project_vars.outputs.name }}-linux-amd64

    - name: Upload arm64 binary
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.project_vars.outputs.name }}-linux-arm64
        path: backend/${{ steps.project_vars.outputs.name }}-linux-arm64
    
    - name: Get tag name
      id: get_tag
      if: startsWith(github.ref, 'refs/tags/')
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') # Only run on tag pushes
    permissions:
      contents: write # Required to create releases
    steps:
    - name: Download amd64 binary
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build.outputs.project_name }}-linux-amd64
        path: ./release_artifacts

    - name: Download arm64 binary
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build.outputs.project_name }}-linux-arm64
        path: ./release_artifacts
        
    - name: List downloaded artifacts
      run: ls -R ./release_artifacts

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.build.outputs.release_tag }}
        name: Release ${{ needs.build.outputs.release_tag }}
        body: |
          Automated release for ${{ needs.build.outputs.release_tag }}
          Contains binaries for linux/amd64 and linux/arm64.
        draft: false
        prerelease: false
        files: |
          ./release_artifacts/${{ needs.build.outputs.project_name }}-linux-amd64
          ./release_artifacts/${{ needs.build.outputs.project_name }}-linux-arm64
